
sar_function __tmp_cvar_save    "cond  ?__tmp_cvar_$1=?__empty svar_from_cvar __tmp_cvar_$1 $1"
sar_function __tmp_cvar_restore "cond !?__tmp_cvar_$1=?__empty sar_expand $1 $$__tmp_cvar_$1; svar_set __tmp_cvar_$1 $'$'"
sar_function svar_capture_quiet "__tmp_cvar_save sar_con_filter; __tmp_cvar_save sar_con_filter_default; sar_con_filter 1; sar_con_filter_default 0; svar_capture $'$1$' $+2; __tmp_cvar_restore sar_con_filter; __tmp_cvar_restore sar_con_filter_default"
sar_alias      gettick "svar_capture_quiet gettick_ret sar_session; sar_expand __gettick $gettick_ret"
sar_function __gettick "svar_set gettick_ret $4"
sar_function less_than "svar_set __tmp_less_than $'$1$'; svar_fsub __tmp_less_than $'$2$'; svar_fmul __tmp_less_than 0; conds ?__tmp_less_than=0 $'svar_set less_than_ret 0$' $'svar_set less_than_ret 1$'"
svar_set __length_of_compare "Substring index out of bounds of variable"
sar_function length_of "svar_set __tmp_length_of $+1; svar_set length_of_ret 0; __length_of"
sar_function __length_of "svar_capture_quiet __tmp_length_of_2 svar_substr __tmp_length_of 1; cond !?__tmp_length_of_2=?__length_of_compare $'svar_add length_of_ret 1; __length_of$'"
sar_function index_of "svar_set __tmp_index_of $'$1$'; svar_set __tmp_index_of_2 $'$2$'; length_of $'$2$'; __index_of_h2"
sar_function __index_of "svar_set __tmp_index_of_3 $'$__tmp_index_of$'; svar_substr __tmp_index_of_3 0 $length_of_ret; __index_of_h"
sar_function __index_of_h cond "!?__tmp_index_of_2=?__tmp_index_of_3" cond "!?__tmp_index_of_3=?__empty" "svar_add index_of_ret 1; svar_substr __tmp_index_of 1; __index_of"
sar_function __index_of_h2 "svar_set index_of_ret 0; __index_of; length_of $'$__tmp_index_of$'; sar_expand less_than $$index_of_ret $$length_of_ret; cond ?less_than_ret=0 svar_set index_of_ret -1"

sar_alias __tcsave __tmp_cvar_save
sar_alias __tcload __tmp_cvar_restore

sar_tas_server 1
sar_function __proto_ent echo $+0
sar_function __proto_instruction "__tcsave con_logfile; __tcsave con_timestamp; __tcsave sar_con_filter; __tcsave sar_con_filter_default; con_timestamp 0; con_logfile cfg/p2tastests/instruction.log; sar_con_filter 1; sar_con_filter_default 0; echo $+1; __tcload sar_con_filter; __tcload sar_con_filter_default; __tcload con_logfile; __tcload con_timestamp"
sar_function __proto_clearout "__proto_instruction clearoutput"
hwait 12 __proto_instruction connect
sar_function __proto_readoutput cond ?__proto_readoutput=1 "execifexists p2tastests/proto-output; hwait 12 __proto_readoutput"
svar_set __proto_readoutput 1; __proto_readoutput

// sar_function test_create <uid> <sameline: 0|1> <displayname>
sar_function test_create  "svar_set __tastest_$__tastest_len $1; svar_set __tastest_d_$1 $'$3$'; svar_set __tastest_nl_$1 $2; svar_set __tastest_o_$1 -1; svar_add __tastest_len 1"
sar_function test_divider "svar_set __tastest_$__tastest_len _div$__tastest_len; svar_set __tastest_d__div$__tastest_len $'$1 $+2$'; svar_set __tastest_nl__div$__tastest_len -1; svar_add __tastest_len 1"
sar_function __test_result "svar_set __tastest_o_$1 $2"
sar_function test_fail    "test_pure_fail    $+1; test_gonext"
sar_function test_succeed "test_pure_succeed $+1; test_gonext"
sar_function test_pure_fail "__test_result $1 0"
sar_function test_pure_succeed "__test_result $1 1"
sar_function test_wait_to_maybe_fail "hwait $1 cond ?__tastest_o_$2=-1 test_fail $2"
svar_set __tastest_len 0
svar_set __tastest_color_-1 CCCCCC; svar_set __tastest_color_0 FF5555; svar_set __tastest_color_1 55FF55
sar_function test_results "nop clear; sar_echo EECC55 TAS Test Results:; svar_set __tastest_i 0; __test_results"
sar_function __test_results cond !?__tastest_i=?__tastest_len "sar_expand __test_results_h $$__tastest_$__tastest_i; svar_add __tastest_i 1; __test_results"
sar_function __test_results_h conds "?__tastest_nl_$1=-1" "sar_expand sar_echo EECC55 $$'$$__tastest_d_$1$$'" "?__tastest_nl_$1=0" "sar_expand sar_expand sar_echo $$$$__tastest_color_$$__tastest_o_$1 $$$$__tastest_d_$1" "sar_expand sar_expand sar_echo_nolf $$$$__tastest_color_$$__tastest_o_$1 $$'$$$$__tastest_d_$1  $$'"


sar_function __tastest_try "svar_set __tas_attempts 0; svar_capture __tastest_success sar_tas_play p2tastests/$2; sar_expand index_of $'$$__tastest_success$' $'Error while opening TAS file:$'; cond !?index_of_ret=-1 test_$1 $2"
sar_function test_tryplay   __tastest_try fail    $+1
sar_function test_trytofail __tastest_try succeed $+1 // For tests of invalid syntax

test_divider Protocol
test_create proto-conn 0 Connect protocol

test_divider "  (Protocol -> SAR)"
test_create proto-play    1 0Play
test_create proto-stop    1 1Stop
test_create proto-srate    1 2PlaybackRate
test_create proto-unpause 1 3Unpause
test_create proto-pause   1 4Pause
test_create proto-ffwd    1 5SkipTo
test_create proto-pauseat 1 6PauseAt
test_create proto-advance 1 7AdvanceTick
test_create proto-script  1 10ProtoScript
test_create proto-entreq  0 100EntRequest

test_divider "  (SAR -> Protocol)"
test_create proto-active 1 0SetActive
test_create proto-inact  1 1SetInactive
test_create proto-rate   1 2PlaybackRate
test_create proto-splay  1 3StatePlaying
test_create proto-spause 1 4StatePaused
test_create proto-sffwd  1 5StateFFWD
test_create proto-ctick  1 6CurrentTick
test_create proto-dtick  1 7DebugTick
test_create proto-raw    1 10ProcessedScript
test_create proto-entrec 1 100EntRecieve
test_create proto-gloc   0 255GameLocation

test_divider Play types
test_create play-any       0 sar_tas_play // any of the below
test_create play-now       1 now // TAS_TEST
test_create play-map       1 map // sp_a2_laser_chaining
test_create play-cm        1 cm // sp_a2_laser_chaining ... this will fail until start cm actually works
test_create play-save      1 save // tube-ride-end -> next test
test_create play-next-now  1 next-now // hey look we're already at tube-ride-end let's wait a bit
test_create play-next-map  1 next-map // sp_a2_bts6 ... only example of this lol. speed it up!
test_create play-next-save 0 next-save // tube-ride-end

test_divider Playback!

test_divider "  Version 1"
test_create playback-moveanalog1   1 MoveAnalog
test_create playback-viewanalog1   1 ViewAnalog
test_create playback-buttons1      1 Buttons
test_create playback-commands1     1 Commands
test_create playback-autojump1     1 AutoJumpTool
test_create playback-autostrafe1   1 AutoStrafeTool
test_create playback-autoaim1      1 AutoAimTool
test_create playback-absmov1       1 Absmov
test_create playback-setang1       1 Setang
test_create playback-decel1        1 Decel
test_create playback-checkfail1    1 CheckFailure
test_create playback-checksuccess1 0 CheckSuccess

test_divider "  Version 4"
test_create playback-moveanalog4   1 MoveAnalog
test_create playback-viewanalog4   1 ViewAnalog
test_create playback-buttons4      1 Buttons
test_create playback-commands4     1 Commands
test_create playback-autojump4     1 AutoJumpTool
test_create playback-autostrafe4   1 AutoStrafeTool
test_create playback-autoaim4      1 AutoAimTool
test_create playback-absmov4       1 Absmov
test_create playback-setang4       1 Setang
test_create playback-decel4        1 Decel
test_create playback-checkfail4    1 CheckFailure
test_create playback-checksuccess4 0 CheckSuccess

test_divider "  Version 7"
test_create playback-moveanalog7   1 MoveAnalog
test_create playback-viewanalog7   1 ViewAnalog
test_create playback-buttons7      1 Buttons
test_create playback-commands7     1 Commands
test_create playback-autojump7     1 AutoJumpTool
test_create playback-autostrafe7   1 AutoStrafeTool
test_create playback-autoaim7      1 AutoAimTool
test_create playback-absmov7       1 Absmov
test_create playback-setang7       1 Setang
test_create playback-decel7        1 Decel
test_create playback-checkfail7    1 CheckFailure
test_create playback-checksuccess7 0 CheckSuccess

test_divider "  Misc"
test_create playback-setang-interp  1 SetangInterp
test_create playback-autoaim-interp 0 AutoAimInterp

// Let's get a recording method sorted so this'll work
// The joke is we don't record
sar_autorecord -1
sar_record_at -1
sar_on_load sar_autorecord -1
sar_on_load sar_record_at -1

volume 0

sar_tas_playback_rate 1
sar_tas_skipto 0
sar_tas_pauseat 0
sar_tas_tools_enabled 1
sar_tas_tools_force 0

sar_function add_test "sar_function __test_$__test_len $'$1 $+2$'; svar_add __test_len 1"
sar_function add_test_vers "add_test $'test_tryplay $1$-1$'; add_test $'test_tryplay $1$-4$'; add_test $'test_tryplay $1$-7$'"
svar_set __test_i 0; svar_set __test_len 0
add_test "test_tryplay play-save"
add_test "test_tryplay play-now"
add_test "test_tryplay play-next-now"
add_test "__proto_instruction rate; __proto_instruction 999; __proto_instruction 1; test_gonext"
add_test "test_tryplay play-next-save"
add_test "test_tryplay play-next-map"
add_test "test_pure_fail proto-srate; cond #sar_tas_playback_rate=999.000000|#sar_tas_playback_rate=999 test_pure_succeed proto-srate; test_gonext"
add_test "test_tryplay play-cm"
add_test "test_tryplay play-map"
add_test "__proto_instruction playtxt; __proto_instruction test,proto-play.p2tas; __proto_instruction 1; test_wait_to_maybe_fail 60 proto-play"
// add_test "test_tryplay proto_pause"
add_test_vers "playback-checkfail"
add_test_vers "playback-checksuccess"
add_test_vers "playback-moveanalog"
add_test_vers "playback-viewanalog"
add_test_vers "playback-buttons"
add_test_vers "playback-commands"
add_test_vers "playback-autojump"
add_test_vers "playback-autostrafe"
add_test_vers "playback-autoaim"
add_test_vers "playback-absmov"
add_test_vers "playback-setang"
add_test_vers "playback-decel"

add_test "test_tryplay playback-setang-interp"
add_test "test_tryplay playback-autoaim-interp"

add_test "hwait 60 test_gonext"

sar_function test_gonext conds ?__test_i=?__test_len "svar_set __proto_readoutput 0; sar_tas_stop; test_results" "svar_add __test_i 1; __test_$__test_i"
test_gonext

sar_function __listtests "svar_set __test_i 0; __listtests_h"
sar_function __listtests_h cond !?__test_i=?__test_len "sar_function __test_$__test_i; svar_add __test_i 1; __listtests_h"
